#include <FastLED.h>
#define NUM_LEDS 256
#define DATA_PIN 8
CRGB leds[NUM_LEDS];

#define MATRIX_WIDTH 32
#define MATRIX_HEIGHT 8

//tablice zawierajaca kolory pikseli na matrycy (dane mozna uzyskac z kod converter.py)
const CRGB colors[NUM_LEDS] = {
CRGB(252, 255, 251), CRGB(248, 255, 250), CRGB(240, 255, 246), CRGB(241, 255, 237), CRGB(250, 255, 223), CRGB(254, 255, 189), CRGB(201, 238, 86), CRGB(196, 227, 90), CRGB(255, 255, 221), CRGB(244, 255, 248), CRGB(12, 117, 26), CRGB(5, 126, 22), CRGB(18, 96, 34), CRGB(24, 82, 38), CRGB(24, 82, 36), CRGB(22, 89, 31), CRGB(16, 102, 25), CRGB(17, 107, 27), CRGB(227, 255, 241), CRGB(245, 255, 243), CRGB(141, 100, 101), CRGB(255, 214, 233), CRGB(255, 237, 253), CRGB(255, 249, 255), CRGB(255, 255, 255), CRGB(254, 255, 255), CRGB(253, 254, 255), CRGB(254, 255, 248), CRGB(252, 255, 219), CRGB(249, 255, 210), CRGB(255, 255, 241), CRGB(255, 251, 251), 
CRGB(249, 255, 250), CRGB(249, 255, 248), CRGB(35, 78, 29), CRGB(27, 73, 11), CRGB(248, 255, 208), CRGB(200, 221, 133), CRGB(192, 223, 99), CRGB(255, 255, 170), CRGB(255, 255, 211), CRGB(247, 255, 228), CRGB(15, 110, 11), CRGB(11, 117, 11), CRGB(233, 255, 225), CRGB(241, 255, 228), CRGB(241, 255, 225), CRGB(239, 255, 220), CRGB(236, 255, 211), CRGB(21, 98, 1), CRGB(22, 93, 18), CRGB(35, 69, 23), CRGB(140, 105, 98), CRGB(255, 226, 225), CRGB(255, 249, 225), CRGB(254, 255, 229), CRGB(253, 255, 247), CRGB(253, 255, 252), CRGB(254, 255, 251), CRGB(250, 255, 235), CRGB(253, 255, 218), CRGB(202, 218, 166), CRGB(253, 255, 238), CRGB(255, 251, 251), 
CRGB(251, 255, 255), CRGB(247, 255, 240), CRGB(245, 255, 219), CRGB(38, 76, 0), CRGB(198, 225, 131), CRGB(255, 255, 186), CRGB(255, 255, 205), CRGB(255, 255, 205), CRGB(253, 255, 187), CRGB(248, 255, 188), CRGB(235, 255, 199), CRGB(27, 107, 0), CRGB(243, 255, 189), CRGB(250, 255, 184), CRGB(187, 230, 118), CRGB(191, 238, 113), CRGB(189, 240, 98), CRGB(187, 240, 107), CRGB(243, 255, 200), CRGB(34, 65, 3), CRGB(135, 109, 88), CRGB(255, 240, 204), CRGB(255, 255, 166), CRGB(201, 228, 120), CRGB(254, 255, 228), CRGB(253, 255, 247), CRGB(251, 255, 232), CRGB(253, 255, 223), CRGB(193, 215, 156), CRGB(249, 255, 216), CRGB(255, 255, 243), CRGB(255, 249, 253), 
CRGB(253, 255, 244), CRGB(252, 255, 228), CRGB(250, 255, 196), CRGB(193, 230, 123), CRGB(197, 226, 129), CRGB(254, 255, 202), CRGB(250, 255, 232), CRGB(247, 255, 228), CRGB(196, 229, 142), CRGB(190, 234, 129), CRGB(187, 240, 147), CRGB(31, 85, 0), CRGB(189, 234, 132), CRGB(190, 228, 119), CRGB(254, 255, 173), CRGB(255, 255, 159), CRGB(255, 255, 136), CRGB(197, 239, 77), CRGB(189, 240, 100), CRGB(253, 255, 186), CRGB(129, 120, 76), CRGB(54, 44, 0), CRGB(200, 227, 97), CRGB(192, 230, 93), CRGB(255, 255, 198), CRGB(255, 255, 217), CRGB(255, 255, 214), CRGB(196, 214, 158), CRGB(250, 255, 220), CRGB(254, 255, 234), CRGB(255, 255, 248), CRGB(255, 249, 251), 
CRGB(255, 255, 223), CRGB(252, 255, 201), CRGB(194, 228, 104), CRGB(197, 234, 108), CRGB(251, 255, 207), CRGB(31, 65, 19), CRGB(241, 255, 244), CRGB(241, 255, 243), CRGB(241, 255, 225), CRGB(250, 255, 227), CRGB(247, 255, 230), CRGB(247, 255, 233), CRGB(33, 77, 20), CRGB(241, 255, 218), CRGB(251, 255, 207), CRGB(255, 255, 181), CRGB(255, 255, 136), CRGB(200, 241, 58), CRGB(200, 253, 58), CRGB(192, 234, 74), CRGB(126, 137, 64), CRGB(51, 59, 5), CRGB(40, 70, 0), CRGB(196, 233, 115), CRGB(194, 224, 96), CRGB(255, 255, 164), CRGB(202, 212, 133), CRGB(255, 255, 214), CRGB(255, 255, 241), CRGB(254, 255, 252), CRGB(254, 254, 254), CRGB(255, 253, 254), 
CRGB(255, 255, 209), CRGB(199, 215, 139), CRGB(200, 226, 113), CRGB(255, 255, 181), CRGB(247, 255, 221), CRGB(246, 255, 250), CRGB(27, 71, 40), CRGB(26, 74, 38), CRGB(33, 72, 38), CRGB(246, 255, 246), CRGB(248, 255, 246), CRGB(246, 255, 243), CRGB(30, 76, 32), CRGB(242, 255, 232), CRGB(246, 255, 210), CRGB(198, 221, 130), CRGB(201, 226, 98), CRGB(199, 228, 73), CRGB(200, 240, 69), CRGB(196, 229, 89), CRGB(132, 143, 78), CRGB(43, 48, 13), CRGB(248, 255, 213), CRGB(253, 255, 198), CRGB(200, 227, 109), CRGB(204, 223, 110), CRGB(255, 255, 197), CRGB(255, 255, 227), CRGB(252, 251, 246), CRGB(254, 254, 255), CRGB(253, 254, 255), CRGB(254, 255, 255), 
CRGB(255, 255, 202), CRGB(202, 212, 151), CRGB(254, 255, 213), CRGB(253, 255, 224), CRGB(254, 255, 239), CRGB(252, 255, 250), CRGB(246, 255, 255), CRGB(245, 255, 255), CRGB(28, 75, 36), CRGB(25, 80, 31), CRGB(28, 81, 36), CRGB(19, 69, 20), CRGB(30, 79, 16), CRGB(191, 234, 157), CRGB(194, 226, 133), CRGB(199, 222, 123), CRGB(198, 214, 120), CRGB(255, 255, 189), CRGB(255, 255, 204), CRGB(255, 255, 220), CRGB(129, 114, 100), CRGB(255, 245, 239), CRGB(255, 254, 237), CRGB(255, 255, 232), CRGB(251, 255, 217), CRGB(255, 255, 223), CRGB(255, 253, 233), CRGB(255, 252, 242), CRGB(255, 255, 253), CRGB(251, 253, 254), CRGB(252, 253, 255), CRGB(255, 254, 255), 
CRGB(255, 255, 198), CRGB(255, 255, 210), CRGB(255, 255, 239), CRGB(254, 253, 249), CRGB(255, 255, 246), CRGB(251, 252, 246), CRGB(253, 255, 255), CRGB(248, 255, 255), CRGB(239, 255, 248), CRGB(232, 255, 241), CRGB(234, 255, 246), CRGB(237, 255, 239), CRGB(242, 255, 221), CRGB(245, 255, 199), CRGB(253, 255, 181), CRGB(255, 255, 177), CRGB(255, 255, 195), CRGB(255, 255, 216), CRGB(255, 255, 244), CRGB(255, 247, 255), CRGB(255, 236, 248), CRGB(255, 237, 246), CRGB(255, 242, 246), CRGB(255, 251, 248), CRGB(254, 255, 250), CRGB(253, 255, 250), CRGB(255, 250, 251), CRGB(255, 251, 255), CRGB(252, 255, 251), CRGB(252, 255, 254), CRGB(254, 255, 255), CRGB(254, 254, 255), 
};

//funkcja zwracajaca indeks diody w tablicy leds po podaniu wspolzednych na matrycy
int getPosition(int x, int y) {
  if (x % 2 == 0){
    return x*MATRIX_HEIGHT+y;
  } else {
    return x*MATRIX_HEIGHT+(MATRIX_HEIGHT-1-y);
  }
}

void setup() {
  FastLED.addLeds<WS2812, DATA_PIN, RGB>(leds, NUM_LEDS);
  FastLED.setBrightness(10);
  fill_solid(leds, NUM_LEDS, CRGB::Black);
//  petle przechodzace po kazdej diodzie i zapalajce je na kolor podany w tablicy colors
  for (int x =0; x < MATRIX_WIDTH; x++) {
    for (int y = 0; y < MATRIX_HEIGHT; y++) {
      leds[getPosition(x, y)] = colors[x+(y*32)];
    }    
  }
  FastLED.show();
}

void loop() {
  
}
